name: SonarCloud Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history for better analysis

      # Step 2: Install Qt (Required for Qt Projects)
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'  # Adjust based on your project needs

      # Step 3: Set Qt Environment Variables
      - name: Set Qt Environment Variables
        run: |
          echo "QT_DIR=$Qt5_DIR" >> $GITHUB_ENV
          echo "CMAKE_PREFIX_PATH=$Qt5_DIR" >> $GITHUB_ENV
          echo "Qt installation path: $Qt5_DIR"

      # Step 4: Set up Visual Studio environment
      - name: Set up Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '17.0'  # Specify Visual Studio 2022

      # Step 5: Install SonarScanner for MSBuild
      - name: Install SonarScanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"Durgesh-byte_GTA-Editor-New" /o:"${{ secrets.SONAR_ORG }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.verbose=true

      # Step 6: Build the project with MSBuild
      - name: Build with MSBuild
        run: |
          msbuild GTAAPPLICATION.sln -t:rebuild -verbosity:diagnostic

      # Step 7: End SonarScanner and upload results
      - name: End SonarScanner
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
