name: SonarCloud C++ Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: windows-latest

    steps:
      # 1. Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Install Qt from official installer
      - name: Install Qt
        run: |
          curl -o qt-installer.exe -L https://download.qt.io/official_releases/online_installers/qt-unified-windows-x64-online.exe
          ./qt-installer.exe --script .github/scripts/qt-installer-noninteractive.qs

      # 3. Setup MSBuild (VS 2022)
      - uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '17.0'

      # 4. Download SonarScanner (native binary)
      - name: Setup SonarScanner
        run: |
          curl -o sonar-scanner.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-windows.zip
          unzip sonar-scanner.zip -d sonar-scanner
          echo "$PWD/sonar-scanner/sonar-scanner-5.0.1.3006-windows/bin" >> $GITHUB_PATH

      # 5. Initialize analysis
      - name: SonarCloud Scan
        run: |
          sonar-scanner \
            -Dsonar.projectKey=Durgesh-byte_GTA-Editor-New \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.cfamily.build-wrapper-output=bw-output

      # 6. Build solution
      - name: Build with MSBuild
        run: msbuild GTAAPPLICATION.sln /t:rebuild /p:Configuration=Release /p:Platform=x64

      # 7. Finalize analysis
      - name: SonarCloud Results
        if: always()
        run: sonar-scanner -Dsonar.token=${{ secrets.SONAR_TOKEN }} end
