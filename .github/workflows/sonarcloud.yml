name: SonarCloud Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Step 2: Install Qt
      - name: Install Qt
        uses: strawberryperl/qt-cmake-action@master
        with:
          qt-version: '6.5.0'  # Specify the Qt version you need (adjust as per your project)
          qt-target: 'desktop'
          qt-modules: 'qtcore qtnetwork qtxml'  # Add Qt modules your project uses
          install-dir: 'C:\Qt'

      # Step 3: Set up Visual Studio environment (for MSBuild)
      - name: Set up Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '17.0'  # Specify Visual Studio 2022

      # Step 4: Install SonarScanner for MSBuild
      - name: Install SonarScanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"Durgesh-byte_GTA-Editor-New" /o:"${{ secrets.SONAR_ORG }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.verbose=true

      # Step 5: Build the project with MSBuild
      - name: Build with MSBuild
        run: |
          msbuild GTAAPPLICATION.sln -t:rebuild -verbosity:diagnostic

      # Step 6: End SonarScanner and upload results
      - name: End SonarScanner
        run: |
          dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          name: "My workflow"
permissions:
  contents: read
  pull-requests: write
